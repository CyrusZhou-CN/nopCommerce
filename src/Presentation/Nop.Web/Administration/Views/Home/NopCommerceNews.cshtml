@model SyndicationFeed
@{
    var hideAdvertisements = EngineContext.Current.Resolve<CommonSettings>().HideAdvertisementsOnAdminArea;
}
@using System.ServiceModel.Syndication;
@using Nop.Core.Domain.Common;
<div class="box">
    <div class="box-header with-border">
        <i class="fa fa-rss"></i>
        <h3 class="box-title">@T("Admin.NopCommerceNews")</h3>
    </div>
    <div class="box-body">
        @foreach (var item in Model.Items)
        {
            <div class="box box-solid">
                <div class="box-header">
                    <div>
                        @if (item.Links.Count > 0)
                        {
                            <a href='@(item.Links[0].Uri.OriginalString)'>@item.Title.Text</a>
                        }
                        else
                        {
                            @item.Title.Text
                        }
                    </div>
                    <div class="newsdate">
                        @item.PublishDate.ToString("d")
                    </div>
                </div>
                <div class="box-body">
                    @Html.Raw(item.Summary.Text)
                </div>
            </div>
        }

        <div>
                <a id="nopcommerceNewsHideAdv" href="#">@(hideAdvertisements ? T("Admin.NopCommerceNews.ShowAdv") : T("Admin.NopCommerceNews.HideAdv"))</a>
                <script type="text/javascript">
                    $(document).ready(function () {
                        $('#nopcommerceNewsHideAdv').click(function () {
                            var postData = {

                            };
                            addAntiForgeryToken(postData);

                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@(Url.Action("NopCommerceNewsHideAdv", "Home"))",
                                data: postData,
                                success: function (data) {
                                    location.reload();
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    alert('Failed to change setting.');
                                }
                            });
                        });
                    });
                </script>
        </div>
    </div>
</div>
